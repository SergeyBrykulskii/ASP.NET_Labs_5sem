@inject IDataService DataService
@implements IDisposable


<h1>Pictures</h1>

@if (!DataService.Success || DataService.Pictures == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var picture in DataService.Pictures)
            {
                <tr>
                    <td>@picture.Name</td>
                    <td> <button class="btn btn-primary" @onclick="() => PictureSelected.Invoke(picture.Id)">Подробнее</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    protected override void OnInitialized()
    {
        DataService.OnPicturesChange += StateHasChanged;
    }
    public void Dispose()
    {
        DataService.OnPicturesChange -= StateHasChanged;
    }

    [Parameter]
    public Action<int> PictureSelected { get; set; }
}
