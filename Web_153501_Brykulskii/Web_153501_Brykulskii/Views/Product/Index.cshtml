@model (List<Picture> pictures, int currentPage, int totalPages)
@{
    ViewData["Title"] = "Каталог";
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
    var genres = ViewData["genres"] as IEnumerable<PictureGenre>;
    string? genre = request.Query["genre"];
    var currentGenre = ViewData["currentGenre"] as string ?? "Все";

    int prev = Model.currentPage == 1 ? 1 : Model.currentPage - 1;
    int next = Model.currentPage == Model.totalPages ? Model.totalPages : Model.currentPage + 1;
}

<h1>Каталог</h1>

<div class="col-2 border-2">
    <ul class="nav">
        <li class="nav-item dropdown">
            <button class="btn dropdown-toggle" data-bs-toggle="dropdown"
                aria-expanded="false">
                @currentGenre
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" asp-controller="product" asp-route-genre=@null>Все</a>
                </li>
                @if (genres != null)
                {
                    foreach (var item in genres)
                    {
                        <li>
                            <a class="dropdown-item" asp-controller="product" asp-route-genre="@item.NormalizedName">
                                @item.Name
                            </a>
                        </li>
                    }
                }
            </ul>
        </li>
    </ul>
</div>

@{
    await Html.RenderPartialAsync("Partials/_PictureListPartial", new
    {
        Pictures = Model.pictures,
        Genre = genre,
        CurrentPage = Model.currentPage,
        TotalPages = Model.totalPages,
        ReturnUrl = returnUrl,
        IsAdmin = false 
    });
}
